const firebase = require('firebase/app');
const { getFirestore } = require('firebase/firestore');
const TeleBot = require('telebot');
require('dotenv').config();

const { getPreviousRec, getTodayRec } = require('./queryDatabase');
const { setTodayRec, updateRecByKey } = require('./modifyDatabase');

const bot = new TeleBot(process.env.BOT_ID);

const firebaseConfig = {
    apiKey: process.env.FIREBASE_APIKEY,
    authDomain: process.env.FIREBASE_AUTHDOMAIN,
    projectId: process.env.FIREBASE_PROJECTID,
    storageBucket: process.env.FIREBASE_STORAGEBUCKET,
    messagingSenderId: process.env.FIREBASE_MESSAGINGSENDERID,
    appId: process.env.FIREBASE_APPID,
    measurementId: process.env.FIREBASE_MEASUREMENTID
};
const app = firebase.initializeApp(firebaseConfig);
const db = getFirestore(app);

const commandsForTeam = `
/yesterday - –Ω–∞–ø–æ–º–Ω–∏—Ç—å –æ –≤—á–µ—Ä–∞—à–Ω–∏—Ö –ø–ª–∞–Ω–∞—Ö
/today - —Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ —Å–µ–≥–æ–¥–Ω—è
`;

// –¥–æ–±–∞–≤–ª—è–µ–º –≤–æ "–≤—á–µ—Ä–∞—à–Ω—é—é" –∑–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–¥–µ–ª–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö
const saveYesterdayResults = async (taskIndexies, msg) => {
    const path = `${process.env.PIVO_DAILY_CHAT_NAME}/${msg.from.username}/messages`;
    const { key } = await getPreviousRec(db, path);
    if (key) {
        const res = await updateRecByKey(db, path, key, { done: taskIndexies });
    } else {
        bot.sendMessage(
            msg.from.id,
            '–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –∑–∞ –ø—Ä–æ—à–ª—ã–µ –¥–Ω–∏ ü§∑‚Äç‚ôÄÔ∏è'
        );
    }
    // TODO: –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–∫–∏
};

// –¥–æ–±–∞–≤–ª—è–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –∑–∞–ø–∏—Å—å –∏ –∫–ª–∞–¥–µ–º —Ç—É–¥–∞ –∑–∞–¥–∞—á–∏
const addTodayTasks = async (tasksMsg, chat, user) => {
    const tasks = tasksMsg.split(';').map((task) => task.trim());
    const res = await setTodayRec(db, `${chat}/${user}/messages`, tasks);
    return res;
};

// —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
const getName = (msg) => {
    return `${msg.from.first_name ? msg.from.first_name : ''} ${
        msg.from.last_name ? msg.from.last_name : ''
    }`;
};

// –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∑–∞ –≤—á–µ—Ä–∞
const getYesterdayMsg = async (msg) => {
    const { data } = await getPreviousRec(
        db,
        `${process.env.PIVO_DAILY_CHAT_NAME}/${msg.from.username}/messages`
    );
    if (data && data.done) {
        let message = `${getName(
            msg
        )} - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞ –ø—Ä–æ—à–ª—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å \n\n`;

        data.tasks.forEach((task, index) => {
            message += `${data.done.includes(index) ? '‚úÖ' : '‚ùå'} ${task}\n`;
        });
        return `${message}`;
    } else {
        bot.sendMessage(
            msg.from.id,
            '–ù–µ —Å–º–æ–≥–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–µ–∫—Å—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á. –ù–∞–¥–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ;)'
        );
        return getName(msg);
    }
};

// –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å –ø–ª–∞–Ω–∞–º–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
const getTodayMsg = async (msg) => {
    const { data } = await getTodayRec(
        db,
        `${process.env.PIVO_DAILY_CHAT_NAME}/${msg.from.username}/messages`
    );
    if (data && data.tasks) {
        let message = `–ü–ª–∞–Ω –Ω–∞ ${new Date().toLocaleDateString('ru')} \n\n`;
        data.tasks.forEach((task) => {
            message += `${'üìù'} ${task}\n`;
        });

        return message;
    }
};

// –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏ –ø–ª–∞–Ω–∞–º–∏
const showResults = async (msg) => {
    try {
        const yesterdayMsg = await getYesterdayMsg(msg);
        const todayMsg = await getTodayMsg(msg);
        const message = yesterdayMsg + '\n' + todayMsg;

        bot.sendMessage(process.env.PIVO_DAILY_CHAT_ID, message);
    } catch (error) {
        bot.sendMessage(
            msg.from.id,
            `–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error}`
        );
    }
};

bot.on('text', async (msg) => {
    try {
        // –ø–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∑–∞ –≤—á–µ—Ä–∞
        if (msg.text.toLowerCase().startsWith('—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã')) {
            const answers = msg.text
                .toLowerCase()
                .replace('—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã', '')
                .trim();

            await saveYesterdayResults(
                answers.split(' ').map((res) => Number(res.trim())),
                msg
            );
            bot.sendMessage(msg.from.id, '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø–∏—Å–∞–ª–∏ ü§ò');
            return;
        }

        // –ø–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–ª–∞–Ω–∞–º–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
        if (msg.text.toLowerCase().startsWith('—Å–µ–≥–æ–¥–Ω—è')) {
            await addTodayTasks(
                msg.text.toLowerCase().replace('—Å–µ–≥–æ–¥–Ω—è', ''),
                process.env.PIVO_DAILY_CHAT_NAME,
                msg.from.username
            );
            bot.sendMessage(msg.from.id, '–ü—Ä–∏–Ω—è—Ç–æ-–ø–æ–Ω—è—Ç–æ üêó');

            // –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–∏ —Å–µ–≥–æ–¥–Ω—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –ø–ª–∞–Ω
            showResults(msg);
            // TODO: –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –∏ –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è
            return;
        }
    } catch (error) {
        bot.sendMessage(
            msg.from.id,
            '‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü–µ—Ä–µ—à–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É. ' + error
        );
    }
});

// –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–±–æ—Ä–æ–º –∫–æ–º–º–∞–Ω–¥ –¥–ª—è –¥–µ–π–ª–∏
bot.on('/start_daily', (msg) => {
    const message =
        '–°–µ–≥–æ–¥–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –¥–µ–π–ª–∏ ‚úâÔ∏è\n\n' +
        '‚ùó –ü—Ä–æ—Å—å–±–∞ –ø–æ–∫–∞ —Å—Ç—Ä–æ–≥–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è —Ç–∞–∫–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–µ–π—Å—Ç–≤–∏–π: \n' +
        '1Ô∏è‚É£ –ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç daily (–¥–æ–±–∞–≤–∏—Ç—å –∏–∑ –≥—Ä—É–ø–ø—ã + –Ω–∞–∂–∞—Ç—å –∫–æ–º–∞–Ω–¥—É start)\n' +
        '2Ô∏è‚É£ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /yesterday - –≤—ã–≤–µ–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∑–∞ –≤—á–µ—Ä–∞ —Å –Ω–æ–º–µ—Ä–∞–º–∏\n' +
        '3Ô∏è‚É£ –í –æ—Ç–≤–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –Ω–æ–º–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:\n —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã 0 1\n' +
        '4Ô∏è‚É£ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n —Å–µ–≥–æ–¥–Ω—è —Ç–µ—Å—Ç—ã; –æ—à–∏–±–∫–∏\n\n' +
        '–°–æ–æ–±—â–µ–Ω–∏—è —Å –∏—Ç–æ–≥–∞–º–∏ –±—É–¥—É—Ç –≤—ã–≤–µ–¥–µ–Ω—ã –≤ –æ–±—â–µ–º —á–∞—Ç–µ –∏–ª–∏ –≤–∞–º –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–µ (–∞ –º–æ–∂–µ—Ç –∏ –Ω–µ—Ç, —Ç–æ–≥–¥–∞ –ø–∏—à–∏—Ç–µ –º–Ω–µ ;))\n' +
        commandsForTeam;
    return bot.sendMessage(msg.chat.id, message);
});

// –ü–æ –∫–æ–º–∞–Ω–¥–µ /yesterday –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä—ã–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å
bot.on('/yesterday', async (msg) => {
    try {
        const { data } = await getPreviousRec(
            db,
            `${process.env.PIVO_DAILY_CHAT_NAME}/${msg.from.username}/messages`
        );

        if (data && data.tasks) {
            let message = '–ù–∞ –≤—á–µ—Ä–∞ –±—ã–ª–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: \n';
            data.tasks.forEach((task, index) => {
                message += `‚¨ú ${index} ${task}\n`;
            });
            message +=
                '\n –ù–∞–ø–∏—à–∏ –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –Ω–æ–º–µ—Ä–∞ –∑–∞–¥–∞—á, –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã 0 1';
            bot.sendMessage(msg.from.id, message);
        } else {
            bot.sendMessage(
                msg.from.id,
                '–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –∑–∞ –ø—Ä–æ—à–ª—ã–µ –¥–Ω–∏ ü§∑‚Äç‚ôÄÔ∏è'
            );
        }
    } catch (error) {
        bot.sendMessage(
            msg.from.id,
            '‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü–µ—Ä–µ—à–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É. ' + error
        );
    }
});

// –ø–æ –∫–æ–º–∞–Ω–¥–µ /today –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º, –≤ –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –∂–¥–µ–º –∑–∞–¥–∞—á–∏
bot.on('/today', (msg) => {
    bot.sendMessage(
        msg.from.id,
        '–ù–∞–ø–∏—à–∏, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è - –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –Ω–∞—á–∏–Ω–∞—é—â–∏–º—Å—è —Å —Å–µ–≥–æ–¥–Ω—è. –†–∞–∑–¥–µ–ª—è–π –∑–∞–¥–∞—á–∏ —á–µ—Ä–µ–∑ ;\n\n–ü—Ä–∏–º–µ—Ä: —Å–µ–≥–æ–¥–Ω—è —Ç–µ—Å—Ç—ã; –æ—à–∏–±–∫–∏'
    );
});

bot.start();
